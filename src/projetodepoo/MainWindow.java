package projetodepoo;


import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.util.*;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Neto
 */
public class MainWindow extends javax.swing.JFrame {
    private Campeonato campeonato;  //Separei os atributos por conta de um erro que tava ocorrendo
    private JLabel jLabelPontos;      
    private JLabel jLabelVitorias;
    private JLabel jLabelEmpates;
    private JLabel jLabelDerrotas;
    /**
     * Creates new form MainWindow
     */
    private java.util.List<Time> classificacaoFinal;
    public MainWindow(Campeonato camp) {
        initComponents();
        this.campeonato = camp;
       //Inicializa o Campeonato importante para o gráfico lá na frente 
        this.classificacaoFinal = campeonato.getTabelaClassificacao();
        
 
        preencherTabela();
}
    public MainWindow(java.util.List<Time> classificacao) {
    this.classificacaoFinal = classificacao; 
    initComponents();                        
    preencherTabela();                       
}
    /**
 * Este método preenche a JTable com os dados da classificação.
 */
private void preencherTabela() {
    // Define os nomes que aparecerão no cabeçalho das colunas
    String[] colunas = {"Pos", "Time", "Pts", "J", "V", "E", "D", "GP", "GC", "SG"};

    // Cria um "modelo" para a tabela, que é onde os dados realmente ficam
    javax.swing.table.DefaultTableModel tableModel = new javax.swing.table.DefaultTableModel(colunas, 0);

    int posicao = 1;
    // Percorre a lista de times e adiciona cada um como uma nova linha no modelo
    for (Time time : this.classificacaoFinal) {
        Object[] linha = {
            posicao,
            time.getNome(),
            time.getPontos(),
            time.getJogosDisputados(),
            time.getVitorias(),
            time.getEmpates(),
            time.getDerrotas(),
            time.getGolsPro(),
            time.getGolsContra(),
            time.getSaldoGols()
        };
        tableModel.addRow(linha);
        posicao++;
    }

    // Associa o modelo (agora cheio de dados) à nossa JTable visual
    // O nome "tabelaClassificacao" aqui deve ser o mesmo da sua variável cinza
    tabelaClassificacao.setModel(tableModel);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaClassificacao = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dados do Brasileirao");

        tabelaClassificacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelaClassificacao);

        jButton1.setText("Gerar gráfico do time");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         // captura o nome e busca o Time
    String nome = jTextField1.getText().trim();
    Time encontrado = campeonato.buscarTime(nome);

    if (encontrado != null) {
        // prepara o gráfico para o time escrito
        List<Graficos.Time> grafTimes = Collections.singletonList(
            new Graficos.Time(
              encontrado.getNome(),
              encontrado.getPontos(),
              encontrado.getVitorias(),
              encontrado.getEmpates(),
              encontrado.getDerrotas()
            )
        );

        // dispara a aplicação JavaFX
        Graficos.launchWith(grafTimes);
    } else {
        JOptionPane.showMessageDialog(
          this,
          "Time \"" + nome + "\" não encontrado.",
          "Busca de Time",
          JOptionPane.WARNING_MESSAGE
        );
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    //Implementa o algoritmo de busca de times no código principal
    String nome = jTextField1.getText().trim();
    Time encontrado = campeonato.buscarTime(nome);  

    if (encontrado != null) {
        // Exemplo de atualização de labels
        jLabelPontos.setText(String.valueOf(encontrado.getPontos()));
        jLabelVitorias.setText(String.valueOf(encontrado.getVitorias()));
        jLabelEmpates.setText(String.valueOf(encontrado.getEmpates()));
        jLabelDerrotas.setText(String.valueOf(encontrado.getDerrotas()));
        // preencha outros campos conforme necessário
    } else {
        JOptionPane.showMessageDialog(
            this,
            "Time \"" + nome + "\" não encontrado.",
            "Busca de Time",
            JOptionPane.WARNING_MESSAGE
        );
    }
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tabelaClassificacao;
    // End of variables declaration//GEN-END:variables
}
